package com.example.year4mobileprogproject.presentation.main

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import androidx.lifecycle.observe
import androidx.recyclerview.widget.LinearLayoutManager
import com.example.year4mobileprogproject.MovieRecyclerAdapter
import com.example.year4mobileprogproject.R
import com.example.year4mobileprogproject.TopSpacingItemDecoration
import com.example.year4mobileprogproject.injection.androidTutoPost
import kotlinx.android.synthetic.main.activity_main.*
import org.koin.android.ext.android.inject

class MainActivity : AppCompatActivity() {

    private lateinit var movieAdapter: MovieRecyclerAdapter
    private val mainViewModel : MainViewModel by inject()
    private lateinit var listMovie : ArrayList<androidTutoPost>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        mainViewModel.onStart("")//MainViewModel will generate the data

        //If the list of data in mainViewModel changes, then the followings actions are done
        mainViewModel.list.observe(this) {
            listMovie = it //change the listMovie with the one generated by MainViewModel
            initRecyclerView()//Display the list
        }

        //initRecyclerView()
        //addDataSet()
    }

    //When you manipulate data (add/remove), you should do it in the mainViewModel.
    //The activity only displays the data you manipulated
    /*private fun addDataSet(){
        val data =
            DataSource.createDataSet()
        movieAdapter.submitList(data)
    }*/

    private fun initRecyclerView(){

        recycler_view.apply {
            layoutManager = LinearLayoutManager(this@MainActivity)
            val topSpacingItemDecoration = TopSpacingItemDecoration(30)
            addItemDecoration(topSpacingItemDecoration)
            movieAdapter = MovieRecyclerAdapter()
            movieAdapter.submitList(listMovie)//Give the list of Movies to the adapter
            adapter = movieAdapter

        }

    }

}
